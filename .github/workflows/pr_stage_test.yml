name: pr_stage_test

on:
  push:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_cu121:
    runs-on: ubuntu-22.04
    container:
      image: nvidia/cuda:12.1.0-cudnn8-devel-ubuntu22.04
    strategy:
      matrix:
        python-version: ["3.10"]
        torch: ["2.5.1"]
    steps:
      - uses: actions/checkout@v3
      - name: Install basic tools
        run: |
          apt-get update
          apt-get install -y wget build-essential git software-properties-common

      # 安装特定版本的 Python
      - name: Install Python ${{ matrix.python-version }}
        run: |
          add-apt-repository ppa:deadsnakes/ppa -y
          apt-get update
          apt-get install -y python${{ matrix.python-version }} python${{ matrix.python-version }}-dev python${{ matrix.python-version }}-distutils
          update-alternatives --install /usr/bin/python3 python3 /usr/bin/python${{ matrix.python-version }} 1
          update-alternatives --install /usr/bin/python python /usr/bin/python${{ matrix.python-version }} 1
          wget https://bootstrap.pypa.io/get-pip.py
          python get-pip.py

      # 安装 PyTorch
      - name: Install PyTorch
        run: |
          pip install torch==${{ matrix.torch }} torchvision --index-url https://download.pytorch.org/whl/cu121
      - name: Fetch GPG keys
        run: |
          apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/3bf863cc.pub
          apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64/7fa2af80.pub
      - name: Install system dependencies
        run: apt-get update && apt-get install -y git ffmpeg libturbojpeg
      - name: Install MMEngine from main branch
        run: pip install git+https://github.com/open-mmlab/mmengine.git@main
      - name: Install ninja to speed the compilation
        run: pip install ninja psutil
      - name: Build MMEngine from source
        run: pip install -e . -v
      - name: Install unit tests dependencies
        run: |
          pip install -r requirements/test.txt
        # Distributed related unit test may randomly error in PyTorch 1.13.0
      - name: Run unittests and generate coverage report
        run: |
          coverage run --branch --source mmengine -m pytest tests/  --ignore tests/test_dist/
          coverage xml
          coverage report -m
      - name: Archive code coverage results
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-report
          path: coverage.xml

